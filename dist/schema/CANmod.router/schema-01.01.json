{"type":"object","definitions":{"can_phy":{"title":"CAN PHY","description":"CAN-bus low-level configuration","type":"object","properties":{"mode":{"title":"Mode","description":"Configures how the device interacts with the CAN-bus. In Normal mode, the device can receive, acknowledge and transmit frames. In Restricted mode, the device can receive and acknowledge, but not transmit frames. In Bus Monitoring mode, the device can receive, but not acknowledge or transmit frames.","type":"integer","default":0,"oneOf":[{"type":"integer","title":"Normal (receive, acknowledge and transmit)","enum":[0]},{"type":"integer","title":"Restricted (receive and acknowledge)","enum":[1]},{"type":"integer","title":"Monitoring (receive only)","enum":[2]}]},"retransmission":{"title":"Automatic retransmission","description":"Retransmission of frames that have lost arbitration or that have been disturbed by errors during transmission.","type":"integer","default":1,"oneOf":[{"type":"integer","title":"Disable","enum":[0]},{"type":"integer","title":"Enable","enum":[1]}]},"bit_rate_cfg_mode":{"title":"Bit-rate configuration mode","description":"Configures how the CAN-bus bit-rate is set. Bit-rate supports all standard bit-rates. Non-standard bit-rate configuration can be set using Bit-timing.","type":"integer","default":0,"oneOf":[{"title":"Bit-rate (simple)","enum":[0]},{"title":"Bit-timing (advanced)","enum":[1]}]}},"dependencies":{"bit_rate_cfg_mode":{"oneOf":[{"properties":{"bit_rate_cfg_mode":{"enum":[0]},"bit_rate_std":{"title":"Bit-rate standard","type":"integer","default":250000,"oneOf":[{"title":"5K","enum":[5000]},{"title":"10K","enum":[10000]},{"title":"20K","enum":[20000]},{"title":"33.333K","enum":[33333]},{"title":"47.619K","enum":[47619]},{"title":"50K","enum":[50000]},{"title":"83.333K","enum":[83333]},{"title":"95.238K","enum":[95238]},{"title":"100K","enum":[100000]},{"title":"125K","enum":[125000]},{"title":"250K","enum":[250000]},{"title":"500K","enum":[500000]},{"title":"800K","enum":[800000]},{"title":"1M","enum":[1000000]}]},"bit_rate_fd":{"title":"Bit-rate FD","type":"integer","default":1000000,"oneOf":[{"title":"1M","enum":[1000000]},{"title":"2M","enum":[2000000]},{"title":"4M","enum":[4000000]}]}},"required":["bit_rate_std","bit_rate_fd"]},{"properties":{"bit_rate_cfg_mode":{"enum":[1]},"bit_rate_std":{"title":"Bit-timing standard","type":"object","properties":{"brp":{"title":"BRP (Bit Rate Prescaler)","type":"integer","default":2,"minimum":1},"seg1":{"title":"SEG1 (Time Segment 1)","type":"integer","default":63,"minimum":1},"seg2":{"title":"SEG2 (Time Segment 2)","type":"integer","default":16,"minimum":2},"sjw":{"title":"SJW (Synchronization Jump Width)","type":"integer","default":4,"minimum":0,"maximum":4}},"additionalProperties":false,"required":["brp","seg1","seg2","sjw"]},"bit_rate_fd":{"title":"Bit-timing FD","type":"object","properties":{"brp":{"title":"BRP (Bit Rate Prescaler)","type":"integer","default":1,"minimum":1},"seg1":{"title":"SEG1 (Time Segment 1)","type":"integer","default":31,"minimum":1},"seg2":{"title":"SEG2 (Time Segment 2)","type":"integer","default":8,"minimum":2},"sjw":{"title":"SJW (Synchronization Jump Width)","type":"integer","default":4,"minimum":0,"maximum":4}},"additionalProperties":false,"required":["brp","seg1","seg2","sjw"]}},"required":["bit_rate_std","bit_rate_fd"]}]}},"additionalProperties":false,"patternProperties":{"bit_rate_std":{},"bit_rate_fd":{}},"required":["mode","retransmission","bit_rate_cfg_mode"]},"signal":{},"can_s":{"type":"object","properties":{"phy":{"$ref":"#/definitions/can_phy"},"filter":{"title":"Receive filters","description":"List of receive filters. A message is accepted if it passes one or more filters.","type":"array","minItems":1,"maxItems":32,"items":{"type":"object","properties":{"name":{"title":"Name","description":"Filter name (optional).","type":"string","pattern":"^[ -~]*$","maxLength":16},"state":{"title":"State","description":"Disabled filters are ignored.","type":"integer","default":1,"oneOf":[{"type":"integer","title":"Disable","enum":[0]},{"type":"integer","title":"Enable","enum":[1]}]},"id_format":{"title":"ID format","description":"Filter identifier format. Filters apply to messages with matching identifier format.","type":"integer","default":0,"oneOf":[{"title":"Standard (11-bit)","enum":[0]},{"title":"Extended (29-bit)","enum":[1]}]},"f1":{"title":"ID (HEX)","description":"Filter identifier.","type":"string","pattern":"^[a-fA-F0-9]+$","maxLength":8,"default":"0"},"f2":{"title":"Mask (HEX)","description":"Filter mask.","type":"string","pattern":"^[a-fA-F0-9]+$","maxLength":8,"default":"7FF"},"prescaler_type":{"title":"Prescaling type","description":"Filter prescaling type. Prescale by message count, time or data. Select None to disable prescaling.","type":"integer","default":0,"oneOf":[{"title":"None","enum":[0]},{"title":"Count","enum":[1]},{"title":"Time","enum":[2]},{"title":"Data","enum":[3]}]}},"dependencies":{"prescaler_type":{"oneOf":[{"properties":{"prescaler_type":{"enum":[0]}}},{"properties":{"prescaler_type":{"enum":[1]},"prescaler_value":{"title":"Count","type":"integer","description":"Count prescaler value. Example: Set to 2 to sample a message with a specific ID every second time.","default":1,"minimum":1,"maximum":256}},"required":["prescaler_value"]},{"properties":{"prescaler_type":{"enum":[2]},"prescaler_value":{"title":"Time","description":"Time prescaler value in milliseconds. Example: Set to 1000 to sample a message with a specific ID with a minimum period time of 1 second. Note that messages are not resampled to a specific fixed period time.","type":"integer","default":1,"minimum":1,"maximum":4194304}},"required":["prescaler_value"]},{"properties":{"prescaler_type":{"enum":[3]},"prescaler_value":{"title":"Mask","description":"Data prescaler mask value in hex. Each bit corresponds to a data byte (up to 64 bytes). Leave empty to disable the mask (triggers on any data change). Example 1: Set to FF (0b11111111) to sample a message with a specific ID if any of the first 8 data bytes change. Example 2: Set to 03 (0b00000011) to sample if any of the two first data bytes change. Example 3: Set to 9 (0b00001001) to sample if any of the first or fourth data bytes change.","type":"string","default":"FF","pattern":"^[a-fA-F0-9]*$","maxLength":16}}}]}},"additionalProperties":false,"patternProperties":{"prescaler_value":{}},"required":["state","id_format","f1","f2","prescaler_type"]}},"transmit":{"title":"Transmit messages","description":"List of scheduled transmit messages.","type":"array","minItems":0,"maxItems":16,"items":{"type":"object","properties":{"name":{"title":"Name","description":"Message name (optional).","type":"string","pattern":"^[ -~]*$","maxLength":16},"state":{"title":"State","description":"Message state.","type":"integer","default":1,"oneOf":[{"type":"integer","title":"Disable","enum":[0]},{"type":"integer","title":"Enable","enum":[1]}]},"id_format":{"title":"ID Format","description":"Message identifier format.","type":"integer","default":0,"oneOf":[{"type":"integer","title":"Standard (11-bit)","enum":[0]},{"type":"integer","title":"Extended (29-bit)","enum":[1]}]},"frame_format":{"title":"Frame format","description":"Message frame format.","type":"integer","default":0,"oneOf":[{"type":"integer","title":"Standard","enum":[0]},{"type":"integer","title":"Standard RTR","enum":[2]},{"type":"integer","title":"FD","enum":[1]}]},"brs":{"title":"Bit-Rate Switch","description":"Message data bit-rate-switch (FD only).","type":"integer","default":0},"period":{"title":"Period (10 ms steps)","description":"Message schedule period in milliseconds. 0: single shot, >0: periodic.","type":"integer","minimum":0,"maximum":4294967290,"multipleOf":10},"delay":{"title":"Delay (10 ms steps)","description":"Message schedule offset in milliseconds. If multiple messages are transmitted by the device, it is recommended to offset each separately to reduce peak load on bus. If period > 0, delay < period. If single-shot, delay can be up to max value.","type":"integer","minimum":0,"maximum":4294967290,"multipleOf":10},"id":{"title":"Message ID (hex)","description":"Message identifier. Example: 1FF.","type":"string"},"data":{"title":"Messages Data (hex)","description":"Message data bytes. For RTR frames, the number of bytes do determine the DLC. Example: 01020304 or 0102030405060708. ","type":"string","pattern":"^([a-fA-F0-9]{2}){0,64}$","maxLength":128}},"dependencies":{"id_format":{"oneOf":[{"properties":{"id_format":{"enum":[0]},"id":{"pattern":"^([0-7][a-fA-F0-9]{2}|[a-fA-F0-9]{1,2})$","maxLength":3}}},{"properties":{"id_format":{"enum":[1]},"id":{"pattern":"^([0-1][a-fA-F0-9]{7}|[a-fA-F0-9]{1,7})$","maxLength":8}}}]},"frame_format":{"oneOf":[{"properties":{"frame_format":{"enum":[0]},"brs":{"oneOf":[{"type":"integer","title":"Disable","enum":[0]}]},"data":{"pattern":"^([a-fA-F0-9]{2}){0,8}$","maxLength":16}}},{"properties":{"frame_format":{"enum":[2]},"brs":{"oneOf":[{"type":"integer","title":"Disable","enum":[0]}]},"data":{"pattern":"^([a-fA-F0-9]{2}){0,8}$","maxLength":16}}},{"properties":{"frame_format":{"enum":[1]},"brs":{"oneOf":[{"type":"integer","title":"Disable","enum":[0]},{"type":"integer","title":"Enable","enum":[1]}]},"data":{"pattern":"^([a-fA-F0-9]{2}){0,64}$","maxLength":128}}}]}},"additionalProperties":false,"required":["state","id_format","frame_format","brs","period","delay","id","data"]}}},"additionalProperties":false,"required":["phy","filter","transmit"]},"mux_filter":{"type":"integer","oneOf":[{"type":"integer","title":"Disable","enum":[0]},{"type":"integer","title":"Enable","enum":[1]}]}},"properties":{"phy":{"title":"PHY","type":"object","properties":{"can":{"title":"CAN Primary (P)","type":"object","properties":{"phy":{"$ref":"#/definitions/can_phy"},"route":{"title":"Routing","type":"object","properties":{"mode":{"title":"Routing mode","description":"The routing mode defines how traffic is routed between the primary and the secondary interface.","type":"integer","default":0,"oneOf":[{"type":"integer","title":"Mux","enum":[0]}]},"mux":{"title":"Mux","description":"Mux mode uses two CAN-bus tunnels to transport data to/from the secondary interfaces.","type":"object","properties":{"output":{"title":"Output tunnel","description":"The output tunnel transports data from the secondary buses.","type":"object","properties":{"filter":{"title":"Filter","description":"Filters can be used to disable the transfer of unused data (thereby reducing the load on the primary bus).","type":"object","properties":{"rx_msg":{"title":"RX message","default":1,"$ref":"#/definitions/mux_filter"},"tx_ack":{"title":"TX acknowledge","default":0,"$ref":"#/definitions/mux_filter"},"err":{"title":"Error frame","default":0,"$ref":"#/definitions/mux_filter"}},"additionalProperties":false,"required":["rx_msg","tx_ack","err"]},"message":{"title":"Message","description":"ID of the message used to transport data.","type":"object","properties":{"id_format":{"title":"ID Format","description":"Message identifier format.","type":"integer","default":0,"oneOf":[{"type":"integer","title":"Standard (11-bit)","enum":[0]},{"type":"integer","title":"Extended (29-bit)","enum":[1]}]},"frame_format":{"title":"Frame format","description":"Message frame format.","type":"integer","default":0,"oneOf":[{"type":"integer","title":"Standard","enum":[0]},{"type":"integer","title":"FD","enum":[1]}]},"brs":{"title":"Bit-Rate Switch","description":"Message data bit-rate-switch (FD only).","type":"integer","default":0},"id":{"title":"Message ID (hex)","description":"Message identifier. Example: 1FF.","type":"string"}},"dependencies":{"id_format":{"oneOf":[{"properties":{"id_format":{"enum":[0]},"id":{"pattern":"^([0-7][a-fA-F0-9]{2}|[a-fA-F0-9]{1,2})$","maxLength":3}}},{"properties":{"id_format":{"enum":[1]},"id":{"pattern":"^([0-1][a-fA-F0-9]{7}|[a-fA-F0-9]{1,7})$","maxLength":8}}}]},"frame_format":{"oneOf":[{"properties":{"frame_format":{"enum":[0]},"brs":{"oneOf":[{"type":"integer","title":"Disable","enum":[0]}]}}},{"properties":{"frame_format":{"enum":[1]},"brs":{"oneOf":[{"type":"integer","title":"Disable","enum":[0]},{"type":"integer","title":"Enable","enum":[1]}]}}}]}},"additionalProperties":false,"required":["id_format","frame_format","brs","id"]}},"additionalProperties":false,"required":["filter","message"]},"input":{"title":"Input tunnel","description":"The input tunnel transports data to the secondary buses. Add one message ID for each node transporting data to the secondary buses.","type":"array","minItems":0,"maxItems":8,"items":{"type":"object","properties":{"id_format":{"title":"ID Format","description":"Message identifier format.","type":"integer","default":0,"oneOf":[{"type":"integer","title":"Standard (11-bit)","enum":[0]},{"type":"integer","title":"Extended (29-bit)","enum":[1]}]},"id":{"title":"Message ID (hex)","description":"Message identifier. Example: 1FF.","type":"string"}},"dependencies":{"id_format":{"oneOf":[{"properties":{"id_format":{"enum":[0]},"id":{"pattern":"^([0-7][a-fA-F0-9]{2}|[a-fA-F0-9]{1,2})$","maxLength":3}}},{"properties":{"id_format":{"enum":[1]},"id":{"pattern":"^([0-1][a-fA-F0-9]{7}|[a-fA-F0-9]{1,7})$","maxLength":8}}}]}},"additionalProperties":false,"required":["id_format","id"]}}},"additionalProperties":false,"required":["input","output"]}},"additionalProperties":false,"required":["mode"]}},"additionalProperties":false,"required":["phy","route"]},"can_s1":{"title":"CAN Secondary 1 (S1)","$ref":"#/definitions/can_s"},"can_s2":{"title":"CAN Secondary 2 (S2)","$ref":"#/definitions/can_s"},"can_s3":{"title":"CAN Secondary 3 (S3)","$ref":"#/definitions/can_s"},"can_s4":{"title":"CAN Secondary 4 (S4)","$ref":"#/definitions/can_s"}},"additionalProperties":false,"required":["can","can_s1","can_s2","can_s3","can_s4"]}},"additionalProperties":false,"required":["phy"]}